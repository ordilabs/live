[package]
name = "ordilabs_live"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
anyhow = { version = "1.0.70", optional = true }
async-trait = { version = "0.1.68", optional = true }
axum = { version = "0.6.16", optional = true, features = ["headers"] }
axum-extra = { version = "0.7.4", optional = true, features = ["cookie"] }
axum-otel-metrics = { version = "0.3.0", optional = true }
# axum-prometheus = { version = "0.3.2", optional = true }
bitcoin = { version = "0.30.0", optional = true }
bitcoincore-rpc = { version = "0.17.0", optional = true }
bitcoincore-rpc-json = { version = "0.17.0", optional = true }
broadcaster = "1"
cfg-if = "1"
console-subscriber = { version = "0.1.8", optional = true }
console_error_panic_hook = "0.1"
console_log = "1.0"
directories = { version = "5.0.0", optional = true }
dotenv = { version = "0.15.0", optional = true }
futures = "0.3"
gloo-net = { git = "https://github.com/rustwasm/gloo" }
headers = { version = "0.3.8", optional = true }
hex = { version = "0.4.3", optional = true }
http = "0.2.9"
lazy_static = "1"
leptos = { version = "0.2.5", default-features = false, features = ["serde"] }
leptos_axum = { version = "0.2.5", default-features = false, optional = true }
leptos_meta = { version = "0.2.5", default-features = false }
leptos_router = { version = "0.2.5", default-features = false }
log = "0.4"
metrics-exporter-prometheus = { version = "0.12.0", optional = true }
metrics-process = { version = "1.0.10", optional = true }
mime = { version = "0.3.17", optional = true }
num-format = { version = "0.4.4", optional = true }
ord-labs = { version = "0.1.0", git = "https://github.com/ordilabs/ord-labs.git", branch = "main", optional = true, features = [
  "unstable",
] }
rand = { version = "0.8.5", optional = true }
reqwest = { version = "0.11.16", optional = true, features = ["json"] }
serde = { version = "1", features = ["derive"] }
serde_json = { version = "1" }
thiserror = "1.0.40"
tokio = { version = "1.27.0", features = ["full"], optional = true }
tokio-stream = { version = "0.1.12", optional = true }
tower = { version = "0.4.13", optional = true }
tower-http = { version = "0.4.0", optional = true, features = ["fs", "trace"] }
tracing = { version = "0.1.37", optional = true }
tracing-subscriber = { version = "0.3.16", features = [
  "env-filter",
], optional = true }
wasm-bindgen = "0.2"
web-sys = { version = "0.3.61", features = ["HtmlDocument"] }

[dev-dependencies]
rusty-hook = "^0.11.2"

[features]
ssr = [
  "dep:anyhow",
  "dep:async-trait",
  "dep:axum-otel-metrics",
  "dep:axum",
  "dep:axum-extra",
  "dep:bitcoin",
  "dep:bitcoincore-rpc-json",
  "dep:bitcoincore-rpc",
  "dep:console-subscriber",
  "dep:dotenv",
  "dep:directories",
  "dep:headers",
  "dep:hex",
  "dep:leptos_axum",
  "dep:metrics-exporter-prometheus",
  "dep:metrics-process",
  "dep:mime",
  "dep:num-format",
  "dep:ord-labs",
  "dep:rand",
  "dep:reqwest",
  "dep:tokio-stream",
  "dep:tokio",
  "dep:tower-http",
  "dep:tower",
  "dep:tracing-subscriber",
  "dep:tracing",
  "leptos_meta/ssr",
  "leptos_router/ssr",
  "leptos/ssr",
]
default = []
hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate"]

[package.metadata.cargo-all-features]
denylist = ["actix-files", "actix-web", "leptos_actix"]
skip_feature_sets = [["ssr", "hydrate"]]

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name   
output-name = "ordilabs_live"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
# When NOT using cargo-leptos this must be updated to "." or the counters will not work. The above warning still applies if you do switch to cargo-leptos later.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg	
site-pkg-dir = "pkg"
# The tailwind input file.
# Optional, Activates the tailwind build
tailwind-input-file = "./src/style/input.css"
# The tailwind config file.
# Optional, defaults to "./tailwind.config.js" which if is not present
# is generated for you
tailwind-config-file = "./src/style/tailwind.config.js"
# [Optional] Files in the asset-dir will be copied to the site-root directory
assets-dir = "public"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"
# The port to use for automatic reload monitoring
reload-port = 3001
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
end2end-cmd = "npx playwright test"
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Set by cargo-leptos watch when building with tha tool. Controls whether autoreload JS will be included in the head
watch = false
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false
